%GEOSHOWLOATIONSREF Plots locationsRef generated by collectorForLocations
%on a map and save the plots as .fig files (and .png files if necessary).
%
% It will use the history record file filesLoadedLocations_ref.mat of
% locationsRef in the data set file folder specified by "fileFolder" under
% _AUTOGEN_IMPORTANT.
%
% Yaguang Zhang, Purdue, 04/02/2015

%% User Specified Parameters

% The location of the data set. Please refer to mapViewController for more
% infomation.
fileFolder = fullfile('..', '..', '..',  'Harvest_Ballet_2015');
IS_RELATIVE_PATH = true;
MIN_SAMPLE_NUM_TO_IGNORE = 20;

% If the GPS data has already loaded, you can set this flag to be true and
% skip loading the variables for the data again. Just please make sure the
% variables in the current workspace are indeed corresponding to the files
% specified by "fileFolder".
USE_GPS_DATA_VARIABLES_IN_CURRENT_WORKSPACE = true;

% Whether to save the results into .png files too.
SAVE_PLOTS_AS_PNG = true;

%% Set Matlab Path.

% Clear command window. Close all plot & web map display windows.
clc;close all;wmclose all;

% Changed folder to "ScriptsAndFunctions" first.
cd(fullfile(fileparts(which(mfilename)),'..', '..'));
% Set path.
setMatlabPath;

%% Load GPS Data

% Clear variables.
if exist('files', 'var') && USE_GPS_DATA_VARIABLES_IN_CURRENT_WORKSPACE
    disp('-------------------------------------------------------------');
    disp('Pre-processing: Reuse GPS data variables in the current workspace.');
    % Reuse GPS data variables in current workspace.
    clearvars -except INDEX_FILE_TO_START ...
        fileFolder fileFolderSet IS_RELATIVE_PATH ...
        MIN_SAMPLE_NUM_TO_IGNORE ...
        USE_GPS_DATA_VARIABLES_IN_CURRENT_WORKSPACE ...
        ...
        files fileIndicesCombines fileIndicesTrucks ...
        fileIndicesGrainKarts ...
        fileIndicesSortedByStartRecordingGpsTime ...
        fileIndicesSortedByEndRecordingGpsTime ...
        SAVE_PLOTS_AS_PNG;
else
    disp('-------------------------------------------------------------');
    disp('Pre-processing: Loading GPS data...');
    tic;
    clearvars -except INDEX_FILE_TO_START ...
        fileFolder IS_RELATIVE_PATH ...
        MIN_SAMPLE_NUM_TO_IGNORE ...
        USE_GPS_DATA_VARIABLES_IN_CURRENT_WORKSPACE ...
        SAVE_PLOTS_AS_PNG;
    loadGpsData;
    toc;
    disp('Pre-processing: Done!');
end

%% The Collector for "locations"

disp('-------------------------------------------------------------');

% The folder where the classification results were saved.
pathInFieldClassificationFilefolder = fullfile(fileFolderSet, ...
    '_AUTOGEN_IMPORTANT');
pathInFieldClassificationFile = fullfile(...
    pathInFieldClassificationFilefolder, ...
    strcat('filesLoadedLocations_ref','.mat')...
    );
% The folder where the plots will be saved.
pathGeoshowLocationsRefFilefolder = fullfile(fileFolderSet, ...
    '_AUTOGEN_IMPORTANT', 'geoshowLocationsRefPlots');
% Create the direcotry if necessary.
if ~exist(pathGeoshowLocationsRefFilefolder,'dir')
    mkdir(pathGeoshowLocationsRefFilefolder);
end

% Try loading corresponding history record first.
if exist(pathInFieldClassificationFile,'file')
    disp('Collector: Loading history results of locationsRef...');
    tic;
    load(pathInFieldClassificationFile);
    toc;
    disp('Collector: Done!');
    
    % Plot locationsRef for each file.
    for indexFile = 1:1:length(files)
        disp('-------------------------------------------------------------');
        disp(strcat('Collector: Current route', 23, 23, ...
            num2str(indexFile),'/',num2str(length(files)),'...'));
        
        % Load data into a structure used for collectorGUI.
        routeInfo.locationsRef = locationsRef{indexFile};
        routeInfo.lati = files(indexFile).lat(1:length(routeInfo.locationsRef));
        routeInfo.long = files(indexFile).lon(1:length(routeInfo.locationsRef));
        % Only used for this script.
        routeInfo.type = files(indexFile).type;
        
        % Close all figures.
        close all;
        
        % Plot.
        hGeoshowLocaitonsRefFig = figure('Name', ...
            'Geoshow Routes Colored According to locationsRef');
        initializeMapWithRoutesColoredByLocationsRef;
        title(strcat(...
            'Route', 23, 23, ...
            num2str(indexFile),'/',num2str(length(files)), 23, 23, ...
            '(', routeInfo.type, ')'...
            ));
        tightfig;
        
        % Save the plot.
        pathGeoshowLocationsRefFile = ...
            fullfile(pathGeoshowLocationsRefFilefolder, ...
            strcat('geoshowLocationsRef','indexFile',num2str(indexFile)));
        savefig(hGeoshowLocaitonsRefFig,pathGeoshowLocationsRefFile);
        
        if SAVE_PLOTS_AS_PNG
            frameGeoshowLocationsRef = getframe(hGeoshowLocaitonsRefFig);
            imwrite(frameGeoshowLocationsRef.cdata, ...
                [pathGeoshowLocationsRefFile, '.png']);
        end
        
    end
else
    
    disp('Collector: Couldn''t find history results of locationsRef.');
    disp('Collector: Please make sure the script collectorForLocations.m has been');
    disp('           run for the data set you specified...');
    
end

disp('-------------------------------------------------------------');
disp('Collector: Done!');
disp('-------------------------------------------------------------');

% EOF